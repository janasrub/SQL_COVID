# Èasové promìnné - binární promìnná pro víkend / pracovní den
SELECT DISTINCT date,
	CASE 
		WHEN weekday(`date`) IN (5,6) THEN '1'
		ELSE '0'
		END AS weekend
FROM covid19_basic_differences cbd
;


#roèní období roèní období daného dne (zakódujte prosím jako 0 až 3)
SELECT 
	DISTINCT date, 
	CASE
	WHEN `date` BETWEEN '2020-01-22' AND '2020-03-19' THEN '3'
	WHEN `date` BETWEEN '2020-03-20' AND '2020-06-20' THEN '0'
	WHEN `date` BETWEEN '2020-06-21' AND '2020-09-20' THEN '1'
	WHEN `date` BETWEEN '2020-09-22' AND '2020-12-20' THEN '2'
	WHEN `date` BETWEEN '2020-12-21' AND '2021-03-19' THEN '3'
	WHEN `date` BETWEEN '2021-03-20' AND '2020-06-20' THEN '0'
	ELSE 'error'
	END AS seison
FROM covid19_basic_differences
ORDER BY `date` 
;

#èasové promìnné dohromady
CREATE OR REPLACE TABLE t_01_day_season as
SELECT 
	DISTINCT date, 
	CASE
	WHEN `date` BETWEEN '2020-01-22' AND '2020-03-19' THEN '3'
	WHEN `date` BETWEEN '2020-03-20' AND '2020-06-20' THEN '0'
	WHEN `date` BETWEEN '2020-06-21' AND '2020-09-20' THEN '1'
	WHEN `date` BETWEEN '2020-09-22' AND '2020-12-20' THEN '2'
	WHEN `date` BETWEEN '2020-12-21' AND '2021-03-19' THEN '3'
	WHEN `date` BETWEEN '2021-03-20' AND '2020-06-20' THEN '0'
	ELSE 'error'
	END AS season,
	CASE 
		WHEN weekday(`date`) IN (5,6) THEN '1'
		ELSE '0'
		END AS weekend
FROM covid19_basic_differences
ORDER BY `date` 
;

#èasové promìnné dohromady


##############################################################################

#spojení s testy, výpoèet, hustota obyvatel, prùmìrný vìk 2018,

CREATE OR REPLACE TABLE t_02_tests AS 
SELECT
	cbd.`date`,
	cbd.country,
	cbd.confirmed,
	cbd.confirmed/c.population*100 AS percentagge_confirmed, 
	ct.tests_performed,
	ct.tests_performed/c.population*100 AS percentage_tests_performed,
	c.median_age_2018,
	c.iso3 ,
	ct.ISO ,
	c.capital_city 
FROM covid19_basic_differences cbd 
LEFT JOIN country_codes cc 
	ON cbd.country = cc.country 
LEFT JOIN countries c 
	ON cc.iso3 = c.iso3 
LEFT JOIN covid19_tests ct 
	ON cc.iso3 = ct.ISO  	
	AND cbd.`date` = ct.`date` 
WHERE c.population IS NOT NULL 

SELECT * FROM t_02_tests tt 
	
SELECT * FROM countries c 

SELECT
FROM covid19_tests ct 

#################################################
SELECT * FROM covid19_basic_differences cbd 
WHERE country LIKE 'Cz%'

SELECT *
FROM t_01_day_season tds 
#################################################

#country, rok, hustota zalidneni, GDP, GINI, dìtská umrtnost
CREATE OR REPLACE TABLE t_03_demo_economics as
SELECT
	d.country ,
	d.`year`,
	round(d.population / c.surface_area,2) AS population_density,
	e.GDP ,
	e.gini ,
	d.mortaliy_under5, 
	c.iso3 
FROM demographics d 
	JOIN countries c 
	ON d.country = c.country 
	JOIN economies e 
	ON d.country = e.country 
	AND d.`year` = e.`year` 
WHERE d.population IS NOT NULL AND c.region_in_world IS NOT NULL AND d.`year` = 2019
	
SELECT * FROM t_03_demo_economics tde 	
	



#dožití
CREATE OR REPLACE VIEW v_rok_1965 AS
 	(
 	SELECT * 
 	FROM life_expectancy le 
	WHERE `year` = '1965' AND iso3 IS NOT NULL 
	);

SELECT * FROM v_rok_1965 

CREATE OR REPLACE VIEW v_rok_2015 AS
 	(
 	SELECT * 
 	FROM life_expectancy le 
	WHERE `year` = '2015' AND iso3 IS NOT NULL 
	);

SELECT * FROM v_rok_2015



CREATE OR REPLACE TABLE T_04_life_exp_dif AS
SELECT
	v_65.country, 
	round(v_15.life_expectancy - v_65.life_expectancy,2) AS life_exp_dif,
	v_65.iso3 
FROM v_rok_1965 AS v_65
JOIN v_rok_2015 AS v_15
	ON v_65.country = v_15.country
ORDER BY country

SELECT * FROM t_04_life_exp_dif tled 

##################################################
/*Poèasí
prùmìrná denní (nikoli noèní!) teplota
*/
###############################################
CREATE OR REPLACE TABLE t_prum_denni_teplota AS
SELECT 
	city ,
	round(avg(cast ((REPLACE (temp,'°c',' ')) AS integer)),2) AS temperature,
	date(`date`) AS datum
FROM weather w 
WHERE city IS NOT NULL AND `time` BETWEEN '06:00' AND '21:00'
GROUP BY city, `date`


/*Poèasí
poèet hodin v daném dni, kdy byly srážky nenulové
*/
##############################################
#nejdøíve vytvoøím pomocnou tabulku, kde na èíslo pøevedu rain - všechny data
CREATE OR REPLACE table t_prsi_pomocna AS
SELECT
	city , 
	date(`date`) AS datum,
	round(CAST((REPLACE (rain,' mm',''))AS float),2) AS prselo
FROM weather w 

#pak vytvoøím z pomocné tabulky druhou tabulku, ve které spoèítám kolik hodin pršelo v jednotlivých dnech
CREATE OR REPLACE table t_prsi AS
SELECT
	city , 
	datum,
	count(prselo) AS pocet_hodin_prsi
FROM t_prsi_pomocna tpp 
WHERE city IS NOT NULL AND prselo > 0
GROUP BY city, `datum`	


/*Poèasí
maximální síla vìtru v nárazech bìhem dne
*/
################################################
CREATE OR REPLACE TABLE t_sila_vetru AS
SELECT 
	city,
	`date` ,
	max(CAST((REPLACE (gust,'km/h',''))AS integer)) AS max_naraz
FROM weather w 
WHERE city IS NOT null
GROUP BY `date` , city 


################################################

# celé poèasí spojené do jednoho selectu
CREATE OR REPLACE TABLE t_05_weather as
SELECT tpdt.datum, tpdt.city, tpdt.temperature ,tp.pocet_hodin_prsi , tsv.max_naraz
FROM t_prum_denni_teplota tpdt 
LEFT JOIN t_prsi tp 
	ON tpdt.city = tp.city 
	AND tpdt.datum = tp.datum 
LEFT JOIN t_sila_vetru tsv 
	ON tsv.city = tp.city 
	AND tsv.`date` = tp.datum 
	
######################################################
######################################################	
	
#nabozenstvi

CREATE OR REPLACE VIEW v_nabozenstvi as

SELECT * FROM v_nabozenstvi vn 

SELECT 
	country ,
	round(Christianity / `sum(r.population)` *100,2) AS Christianity,
	round(Islam / `sum(r.population)` *100,2) AS Islam,
	round(Buddhism / `sum(r.population)` *100,2) AS Buddhism,
	round(Hinduism / `sum(r.population)` *100,2) AS Hinduism,
	round(Judaism / `sum(r.population)` *100,2) AS Judaism,
	round(Folk_Religions / `sum(r.population)` *100,2) Folk_Religions,
	round(Other_Religions / `sum(r.population)` *100,2) AS Other_Religions,
	round(Unaffiliated_Religions / `sum(r.population)` *100,2) AS Unaffiliated_Religions
FROM v_nabozenstvi vn 	

